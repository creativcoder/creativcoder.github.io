<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Profiling on creativcoder&#39;s blog</title>
    <link>https://creativcoder.github.io/tags/profiling/</link>
    <description>Recent content in Profiling on creativcoder&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license&lt;br&gt;Powered by [Hugo](//gohugo.io/) with the [Type Theme](//github.com/digitalcraftsman/hugo-type-theme)</copyright>
    <lastBuildDate>Mon, 13 Mar 2017 23:25:02 +0530</lastBuildDate>
    
	<atom:link href="https://creativcoder.github.io/tags/profiling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Valgrind with Rust - Checking memory leaks in your ffi library</title>
      <link>https://creativcoder.github.io/post/checking_memory_leaks_in_rust_ffi/</link>
      <pubDate>Mon, 13 Mar 2017 23:25:02 +0530</pubDate>
      
      <guid>https://creativcoder.github.io/post/checking_memory_leaks_in_rust_ffi/</guid>
      <description>If you are someone writing Rust wrappers for C libraries, then you might as well wanna verify that you are doing the right cleanups in your destructors or you might ignorantly create potential memory leaks from usage of your library. In this post we&amp;rsquo;ll see how to use the very same tool you use in your c programs, i.e., Valgrind to check for memory leaks in your rust wrapper library.</description>
    </item>
    
  </channel>
</rss>