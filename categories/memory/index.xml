<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memory on creativcoder&#39;s blog</title>
    <link>https://creativcoder.github.io/categories/memory/</link>
    <description>Recent content in Memory on creativcoder&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license&lt;br&gt;Powered by [Hugo](//gohugo.io/) with the [Type Theme](//github.com/digitalcraftsman/hugo-type-theme)</copyright>
    <lastBuildDate>Thu, 01 Jun 2017 23:25:02 +0530</lastBuildDate>
    
	<atom:link href="https://creativcoder.github.io/categories/memory/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Meet rustox ! Rust community at Bangalore</title>
      <link>https://creativcoder.github.io/post/rust_community_bangalore/</link>
      <pubDate>Thu, 01 Jun 2017 23:25:02 +0530</pubDate>
      
      <guid>https://creativcoder.github.io/post/rust_community_bangalore/</guid>
      <description>So another rust-lang community got added to the Users group. This time in Bangalore. Its a great opportunity for people interested in learning more about the language and also for rustaceans like us to spread awareness about the benefits of adopting rust to their toolbelt as a systems language.
So at the meetup we started; celebrating 1.0 (May 15) stable release of Rust by cutting the cake. Then we got delivered an awesome pitch by Saifi introducing what rust has to offer, what improvements it brings over other languages, what redundancies it resolves and why one should invest time in learning it.</description>
    </item>
    
    <item>
      <title>Valgrind with Rust - Checking memory leaks in your ffi library</title>
      <link>https://creativcoder.github.io/post/checking_memory_leaks_in_rust_ffi/</link>
      <pubDate>Mon, 13 Mar 2017 23:25:02 +0530</pubDate>
      
      <guid>https://creativcoder.github.io/post/checking_memory_leaks_in_rust_ffi/</guid>
      <description>If you are someone writing Rust wrappers for C libraries, then you might as well wanna verify that you are doing the right cleanups in your destructors or you might ignorantly create potential memory leaks from usage of your library. In this post we&amp;rsquo;ll see how to use the very same tool you use in your c programs, i.e., Valgrind to check for memory leaks in your rust wrapper library.</description>
    </item>
    
  </channel>
</rss>